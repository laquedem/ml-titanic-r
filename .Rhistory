sqrt(4)
2 + 2
2 + 2; 4+ 3
power(2)
2+ 2
"booo"
a <- c(5, 7 ,3 )
a
length(a)
var(a)
clear()
clear lal
clear all
c(5 ,3, 4)
mean (3, 4, 5, 0,6)
mean (3, 4, 5, 0,60000000)
a <- c(5, 6, 5034, 34, 342, 43, 452)
mean(a)
getwd()
titanic.R
Rscript titanic.R
Rscript
train <- read.table("/ml_titanic_r/train.csv", h = TRUE, sep=",")
test <- read.table("/ml_titanic_r/test.csv", h=TRUE, sep = ",")
setwd("C:\Users\CIOR.DESKTOP-FLDEAFQ\Documents\ml_titanic_r")
getwd()
setwd("C:/Users/CIOR.DESKTOP-FLDEAFQ/Documents/ml_titanic_r")
Rscript Titanic.R
Rscript titanic.R
$ Rscript titanic.R
train <- read.table("train.csv", h = TRUE, sep=",")
test <- read.table("test.csv", h=TRUE, sep = ",")
test <- read.table("test.csv", h=TRUE, sep = ",")
test <- read.table("test.csv", h=TRUE, sep = ",")
test <- read.table("test.csv", h=TRUE, sep = ",")
View(test)
View(test)
test
View(test)
full <- rbind(train[,-2], test)
str(full)
classes <- table(train$Pclass)
classes
table(train$Survived)
prop.table(table(train$Survived))
survived <- table(train$Survived)
survived
prop.table(clasess) # finding percent of classes
prop.table(classes)
table(train$Sex, train$Survived)
prop.table(survivedofsex)
survivedofsex <- table(train$Sex, train$Survived)
prop.table(survivedofsex)
sex <- table(train$Sex)
prop.table(sex)
mosaicplot(survivedofsex)
View(train)
View(train)
room <- table(train$Cabin)
fare <- table(train$Fare)
survivedofroom <- table(survived, room)
mosaicplot(survivedofroom)
survivedofroom <- table(train$Survived, train$Room)
mosaicplot(survivedofroom)
room <- table(train$Cabin)
fare <- table(train$Fare)
survivedofroom <- table(train$Survived, train$Room)
fare <- table(train$Fare)
survivedoffare <- table(train$Survived, train$Fare)
mosaicplot(survivedoffare)
mean(train$Age, na.rm = TRUE)
averageage <- mean(train$Age, na.rm = TRUE)
mean(train$Age[train$Survived==0], na.rm = TRUE)
mean(train$Age[train$Survived==1], na.rm = TRUE)
averageage <- mean(train$Age, na.rm = TRUE)
averageageofdead <- mean(train$Age[train$Survived==0], na.rm = TRUE)
averageageofsurvived <- mean(train$Age[train$Survived==1], na.rm = TRUE)
colSums(is.na(full))
embarked <- table(train$Embarked)
train$Embarked[train$Embarked==""]="S"
clear_train <- train[complete.cases(train),]
cor(clear_train$Flare, clear_train$Pclass)
clear_train <- train[complete.cases(train),]
cor(clear_train$Fare, clear_train$Pclass)
str(train)
apply(train, 2, function(x) length(unique(x)))
train$Survived <- as.factor(train$Survived)
train$Pclass <- as.factor(train$Pclass)
train$Sex <- as.factor(train$Sex)
train$Embarked <- as.factor(train$Embarked)
str(train)
install.packages("ggplot2")
library(ggplot2)
ggplot(train, aes(Pclass, fill=Survived)) + geombar()
ggplot(train, aes(Pclass, fill=Survived)) + geom_bar()
ggplot(train, aes(Pclass, fill=Survived)) + geom_bar(position = "fill")
ggplot(train, aes(Pclass, fill=Survived)) + geom_bar() + facet_wrap(~Sex)
library(rpart)
source('~/ml_titanic_r/titanic.R', echo=TRUE)
install.packages("ggplot2")
split <- runif(dim(train)[1]) > 0.3
train_set <- train[split,]
test_set <- train[!split,]
fit_TD <- rpart(Survived~Sex+Pclass, data = train, method = "class")
fit_TD
plot(fit_TD)
fit_TD <- rpart(Survived~., data = train_set, method = "class")
fit_TD
plot(fit_TD)
text(fit_TD)
fit_TD <- rpart(Survived~Sex+Age+Pclass, data = train_set, method = "class")
fit_TD
plot(fit_TD)
text(fit_TD)
install.packages("rpart.plot")
library("rpart.plot")
rpart.plot(fit_TD, extra = 3, fallen.leaves = 7)
rpart.plot(fit_TD, extra = 3, fallen.leaves = TRUE)
rpart.plot(fit_TD, extra = 3, fallen.leaves = FALSE)
library(caret)
DT_prediction <- predict(fit_TD, data=train_set)
install.packages("caret")
DT_prediction <- predict(fit_TD, data=train_set)
DT_prediction <- predict(fit_TD, data=train_set, type = "class")
sum(DT_prediction==train_set$Survived)/nrow(train_set)
sum(DT_prediction==train$Survived)/nrow(train)
library(caret)
confusionMatrix(DT_prediction, train_set$Survived, positive = 1)
confusionMatrix(DT_prediction, train_set$Survived, positive = "1")
library(caret)
confusionMatrix(DT_prediction, train_set$Survived, positive = "1")
library(e1071)
confusionMatrix(DT_prediction, train_set$Survived, positive = "1")
install.packages("e1071")
library("e1071")
confusionMatrix(DT_prediction, train_set$Survived, positive = "1")
confusionMatrix(DT_prediction, train_set$Survived, positive = "0")
confusionMatrix(DT_prediction, train_set$Survived, positive = "1")
sum(DT_prediction==train_set$Survived)/nrow(train_set)
DT_prediction <- predict(fit_TD, data=test_set, type = "class")
sum(DT_prediction==test_set$Survived)/nrow(test_set)
fit_TD <- rpart(Survived~Sex+Age+Pclass+, data = test_set, method = "class")
fit_TD <- rpart(Survived~Sex+Age+Pclass, data = test_set, method = "class")
DT_prediction <- predict(fit_TD, data=test_set, type = "class")
sum(DT_prediction==test_set$Survived)/nrow(test_set)
fit_TD <- rpart(Survived~Sex+Age+Pclass, data = train_set, method = "class")
DT_prediction <- predict(fit_TD, data=test_set, type = "class")
sum(DT_prediction==test_set$Survived)/nrow(test_set)
DT_prediction <- predict(fit_TD, data=test_set, type = "class")
sum(DT_prediction==test_set$Survived)/nrow(test_set)
confusionMatrix(DT_prediction, test_set$Survived, positive = "1")
test_set$new <- predict(fit_TD, train_set, type = "class")
test_set$new <- predict(fit_TD, test_set, type = "class")
sum(test_set$new==test_set$Survived)/nrow(test_set)
fit_TD <- rpart(Survived~., data = train_set, method = "class")
test_set$new <- predict(fit_TD, test_set, type = "class")
sum(test_set$new==test_set$Survived)/nrow(test_set)
View(train)
fit_TD <- rpart(Survived~Pclass+Age+Sex+Embarked, data = train_set, method = "class")
test_set$new <- predict(fit_TD, test_set, type = "class")
sum(test_set$new==test_set$Survived)/nrow(test_set)
fit_TD <- rpart(Survived~Pclass+Age+Sex, data = train_set, method = "class")
test_set$new <- predict(fit_TD, test_set, type = "class")
sum(test_set$new==test_set$Survived)/nrow(test_set)
confusionMatrix(DT_prediction, train_set$Survived, positive = "1")
confusionMatrix(DT_prediction, test_set$Survived, positive = "1")
ctrl <- trainControl(method = "repeatedcv", repeats = 5)
grid <- expand.grid(k=3:9)
Fit_knn <- train(Survived~Age+Sex+Pclass,
data = train_set,
method = "knn",
trControl = ctrl,
tuneGrid = grid
)
Fit_knn
train_set <- train_set[complete.cases(train),]
ctrl <- trainControl(method = "repeatedcv", repeats = 5)
grid <- expand.grid(k=3:9)
Fit_knn <- train(Survived~Age+Sex+Pclass,
data = train_set,
method = "knn",
trControl = ctrl,
tuneGrid = grid
)
Fit_knn
Fit_logit <- glm(Survived~Age+Sex+Pclass, family = binominal, data = clear_train)
Fit_logit
Fit_logit <- glm(Survived~Age+Sex+Pclass, family = binomial, data = clear_train)
Fit_logit
Fit_logit <- glm(Survived~Age+Sex+Pclass, family = binomial, data = clear_train)
Fit_logit
summary(Fit_logit)
test_set$new <- predict(fit_TD, test_set, type="class")
sum(test_set$new==test_set$Survived)/nrow(test_set)
exp(Fit_logit$coefficients)
Fit_logit <- glm(Survived~Age+Sex+Pclass+Embarked+Fare, family = binomial, data = clear_train)
Fit_logit
summary(Fit_logit)
test_set$new <- predict(fit_TD, test_set, type="class")
sum(test_set$new==test_set$Survived)/nrow(test_set)
exp(Fit_logit$coefficients)
Fit_logit <- glm(Survived~Age+Sex+Pclass+Embarked+Fare, family = binomial, data = train_set)
Fit_logit
summary(Fit_logit)
test_set$new <- predict(fit_TD, test_set, type="class")
sum(test_set$new==test_set$Survived)/nrow(test_set)
exp(Fit_logit$coefficients)
test$Survived <- predict(fit, data=test, type = "class")
sum(test_set$new==test_set$Survived)/nrow(test_set)
Fit_logit <- glm(Survived~Age+Sex+Pclass+Embarked+Fare, family = binomial, data = train_set)
summary(Fit_logit)
sum(test_set$new==test_set$Survived)/nrow(test_set)
test$Survived <- predict(Fit_logit, data=test, type = "class")
test$Survived <- prediction(fit, data=test, type = "class")
test$Survived <- prediction(Fit_logit, data=test, type = "class")
test_set$new <- prediction(fit_TD, test_set, type="class")
test_set$new <- predictionFunction(fit_TD, test_set, type="class")
test_set$new <- predictionFunction(fit_TD, test_set)
test_set$new <- predict(Fit_logit, test_set, type = "response")
sum(test_set$new==test_set$Survived)/nrow(test_set)
View(test_set)
str(test_set)
test_set$new <- predict(Fit_logit, test_set, type = "response")
sum(test_set$new==test_set$Survived)/nrow(test_set)
test$Survived <- predict(fit, data = test, type = "response")
sum(DT_prediction==train_set$Survived)/nrow(train_set)
DT_prediction <- predict(fit_TD, data=train_set, type = "class")
sum(DT_prediction==train_set$Survived)/nrow(train_set)
test_set$new <- predict(fit_TD, test_set, type = "class")
sum(test_set$new==test_set$Survived)/nrow(test_set)
Fit_logit <- glm(Survived~Age+Sex+Pclass+Embarked+Fare, family = binomial, data = train_set)
Fit_logit
summary(Fit_logit)
test_set$new <- predict(Fit_logit, test_set, type = "response")
sum(test_set$new==test_set$Survived)/nrow(test_set)
exp(Fit_logit$coefficients)
sum(test_set$new==test_set$Survived)/nrow(test_set)
sum(test_set$new==test_set$Survived)/nrow(test_set)
test$Survived <- predict(fit_TD, test, type = "response")
test_set$new <- predict(fit_TD, test_set, type = "class")
test$Survived <- predict(fit_TD, test, type = "class")
fit_TD <- rpart(Survived~Age+Sex, data = train_set, method = "class")
test$Survived <- predict(fit_TD, test, type = "class")
test$Pclass <- as.factor(test$Pclass)
fit_TD <- rpart(Survived~Age+Sex+Pclass, data = train_set, method = "class")
test$Survived <- predict(fit_TD, test, type = "class")
result <- test[,c("PassengerId", "Survived")]
train_set <- train_set[complete.cases(train_set),]
test_set$new <- predict(Fit_logit, test_set, type = "response")
sum(test_set$new==test_set$Survived)/nrow(test_set)
write.csv(result, file = "Titanic_prediction.csv", row.names = FALSE, quote = FALSE)
